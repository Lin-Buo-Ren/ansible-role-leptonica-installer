---
- name: Update system to apply possible bug fixes
  become: True
  apt:
    pkg: '*'
    state: latest
    update_cache: yes

- name: Install Leptonica's build dependencies
  become: True
  apt:
    pkg:
      - gcc
      - libgif-dev
      - libjpeg8-dev
      - libopenjp2-7-dev
      - libpng-dev
      - libtiff5-dev
      - libwebp-dev
      - make
      - pkg-config
      - zlib1g

- name: Determine Leptonica's latest release information
  block:
    - name: Fetch Leptonica release information
      uri:
        url: https://api.github.com/repos/DanBloomberg/leptonica/releases/latest
      register: result

    - name: Determine latest release and release tarball URL of Leptonica
      set_fact:
        latest_tarball_url: '{{ result.json.assets[0].browser_download_url }}'
        latest_version: '{{ result.json.tag_name }}'
  rescue:
    - fail:
        msg: Unable to determine the latest Leptonica release

- name: Create temporary directory for software building
  register: result
  tempfile:
    state: directory
    prefix: leptonica-installer

- name: Register fact for software building directory
  set_fact:
    build_dir: '{{ result.path }}'

- name: Download the latest Leptonica release tarball
  register: result
  get_url:
    url: '{{ latest_tarball_url }}'
    dest: '{{ build_dir }}'

- name: Register fact for the downloaded release tarball
  set_fact:
    release_tarball: '{{ result.dest }}'

- name: Extract the release tarball
  unarchive:
    remote_src: yes
    dest: '{{ build_dir }}'
    src: '{{ release_tarball }}'

- name: Determine software installation prefix
  when: leptonica_installation_prefix == 'auto-detected'
  block:
    - name: Determine software installation prefix: local
      when: leptonica_install_scope == 'local'
      set_fact:
        leptonica_installation_prefix: '{{ ansible_user_dir }}/.local/opt/leptonica-{{ latest_version }}'

    - name: Set global installation prefix
      when: leptonica_install_scope == 'global'
      set_fact:
        leptonica_installation_prefix: '/opt/leptonica-{{ latest_version }}'
  rescue:
    - fail:
        msg: Unable to determine the software installation prefix

- name: Configure the build
  shell: ./configure --prefix={{ leptonica_installation_prefix | quote }} {{ leptonica_custom_configure_args }}
  args:
    chdir: '{{ build_dir }}/leptonica-{{ latest_version }}'

- name: Build Leptonica
  shell: make --jobs={{ ansible_processor_vcpus }}
  args:
    chdir: '{{ build_dir }}/leptonica-{{ latest_version }}'

- name: Determine if the installation should be run as superuser
  block:
    - name: Test if the software installation prefix is writable by the current user
      register: result
      tempfile:
        path: '{{ leptonica_installation_prefix }}/write-test'
        prefix: write-test

    - name: Remember that we can install software as the current user
      set_fact:
        installation_requires_superuser: no

    - name: Remove test file
      file:
        path: '{{ result.path }}'
        state: absent
  rescue:
    - name: Remember that the installation should be run as superuser
      set_fact:
        installation_requires_superuser: yes

- name: Install Leptonica
  block:
    - name: Install Leptonica: as current user
      when: installation_requires_superuser == 'no'
      command: make install
      args:
        chdir: '{{ build_dir }}/leptonica-{{ latest_version }}'

    - name: Install Leptonica: as superuser
      when: installation_requires_superuser == 'yes'
      become: True
      command: make install
      args:
        chdir: '{{ build_dir }}/leptonica-{{ latest_version }}'

- name: Clean-up build directory
  file:
    path: '{{ build_dir }}'
    state: absent
